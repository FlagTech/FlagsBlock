
#ifndef _FLAG_Matrix_H
#define _FLAG_Matrix_H

#if ARDUINO >= 100
#include "Arduino.h"
#else
#include "WProgram.h"
#endif

#define COLOR_NONE 0
#define COLOR_RED 1
#define COLOR_GREEN 2
#define COLOR_RED_GREEN 3

class MLED
{
public:
	MLED(uint8_t _intensity = 4, byte dataPin = D7, byte clockPin = D5);
	void dot(byte color, uint8_t x, uint8_t y, bool draw = 1);
	void setRow(byte color, byte row, byte data);

	void newDot(byte color, uint8_t x, uint8_t y);
	void newSetRow(byte color, byte row, byte data);

	void begin();
	void clear();
	void setIntensity(byte inten);

	void toSun(uint16_t delaytime);
	void toRain(uint16_t delaytime);
	void toCloud(uint16_t delaytime);

	void oneChar(uint16_t num, byte color); // (單一字母,顏色)

	void scroll(uint16_t delaytime, byte color);
	void changeStr(String st);

	volatile uint8_t disBuffer_r[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}; // =口 矩陣擺放方向
	volatile uint8_t disBuffer_g[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}; // =口 矩陣擺放方向
	volatile uint8_t row_r[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};				// =口 矩陣擺放方向
	volatile uint8_t row_g[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};				// =口 矩陣擺放方向

protected:
	void sendCommand(byte led);
	void sendData(byte add, byte data);
	void send(byte data);

	uint8_t intensity;
	byte dataPin;
	byte clockPin;

	//定義8*8矩陣中的天氣圖
	byte umb[8] = {B00000000, B00000000, B00111100, B01111110, B11111111, B00001000, B00101000, B00111000};		//雨傘
	byte sun_1[8] = {B00010010, B10010100, B01111100, B00100111, B11100100, B00111110, B00101001, B01001000}; //太陽1號
	byte sun_2[8] = {B01001000, B01010011, B00111100, B10100110, B01100101, B00111100, B11001010, B00010010}; //太陽2號
	byte cloud[8] = {B00000000, B00011000, B01100110, B10000001, B10000001, B01111110, B00000000, B00000000}; //雲
	byte slide[8] = {0, 0, 0, 0, 0, 0, 0, 0};																																	//儲存雲朵滑動中的位置

	volatile uint8_t all[8][8] = {{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0},
																{0, 0, 0, 0, 0, 0, 0, 0}};
	bool sun_choose = 0; //太陽目前狀態

	byte rain_down = 0; //雨下降次數
	byte rain_column;		//哪一行要下雨
	byte max_down;			//雨下降的最大距離

	bool choose = LOW;		//是否決定方向
	int displacement = 8; //位移量
	byte cloud_choose;		//雲飄的方向

	void cloudUp(uint16_t delaytime, byte co);
	void cloudDown(uint16_t delaytime, byte co);
	void cloudLeft(uint16_t delaytime, byte co);
	void cloudRight(uint16_t delaytime, byte co);

	unsigned char fonts3[95][8] = {
			{B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000}, // (space)
			{B00011000, B00011000, B00011000, B00011000, B00011000, B00000000, B00011000, B00011000}, // !
			{B00010100, B00010100, B00010100, B00000000, B00000000, B00000000, B00000000, B00000000}, // "
			{B00000000, B00101000, B01111100, B00101000, B00101000, B01111100, B00101000, B00000000}, // #
			{B00001000, B00011100, B00101000, B00011100, B00001010, B00101010, B00011100, B00001000}, // $
			{B00100000, B01010010, B00100100, B00001000, B00010000, B00100100, B01001010, B00000100}, // %
			{B00000000, B00110000, B01001000, B01001000, B00110010, B01001100, B01001000, B00110110}, // &
			{B00010000, B00010000, B00010000, B00000000, B00000000, B00000000, B00000000, B00000000}, // '
			{B00000100, B00001000, B00010000, B00010000, B00010000, B00010000, B00001000, B00000100}, // (
			{B00100000, B00010000, B00001000, B00001000, B00001000, B00001000, B00010000, B00100000}, // )
			{B00000000, B00001000, B00101010, B00011100, B00001000, B00011100, B00101010, B00001000}, // *
			{B00000000, B00011000, B00011000, B01111110, B01111110, B00011000, B00011000, B00000000}, // +
			{B00000000, B00000000, B00000000, B00111000, B00111000, B00111000, B00001000, B00110000}, // ,
			{B00000000, B00000000, B00000000, B01111110, B01111110, B00000000, B00000000, B00000000}, // -
			{B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011000, B00011000}, // .
			{B00000000, B00000010, B00000100, B00001000, B00010000, B00100000, B01000000, B00000000}, // /
			{B00000000, B00011000, B00100100, B00100100, B00100100, B00100100, B00100100, B00011000}, // 0
			{B00000000, B00001000, B00011000, B00101000, B00001000, B00001000, B00001000, B00111110}, // 1
			{B00000000, B00011100, B00100010, B00000010, B00000100, B00001000, B00010000, B00111110}, // 2
			{B00000000, B00011100, B00100010, B00000010, B00011100, B00000010, B00100010, B00011100}, // 3
			{B00000000, B00000100, B00001100, B00010100, B00100100, B00111110, B00000100, B00000100}, // 4
			{B00000000, B00111100, B00100000, B00100000, B00111000, B00000100, B00100100, B00011000}, // 5
			{B00000000, B00011000, B00100100, B00100000, B00111000, B00100100, B00100100, B00011000}, // 6
			{B00000000, B00111100, B00100100, B00100100, B00000100, B00000100, B00000100, B00000100}, // 7
			{B00000000, B00011000, B00100100, B00100100, B00011000, B00100100, B00100100, B00011000}, // 8
			{B00000000, B00011000, B00100100, B00100100, B00011100, B00000100, B00001000, B00010000}, // 9
			{B00000000, B00011000, B00011000, B00000000, B00011000, B00011000, B00000000, B00000000}, // :
			{B00000000, B00011000, B00011000, B00000000, B00011000, B00011000, B00001000, B00010000}, // ;
			{B00000000, B00000100, B00001000, B00010000, B00100000, B00010000, B00001000, B00000100}, // <
			{B00000000, B00000000, B00111110, B00000000, B00111110, B00000000, B00000000, B00000000}, // =
			{B00000000, B00100000, B00010000, B00001000, B00000100, B00001000, B00010000, B00100000}, // >
			{B00000000, B00111000, B01000100, B00000100, B00001000, B00010000, B00000000, B00010000}, // ?
			{B00111100, B01000010, B10011001, B10100101, B10100101, B10011111, B01000000, B00111110}, // @
			{B00011000, B00111100, B01100110, B01100110, B01111110, B01111110, B01100110, B01100110}, // A
			{B01111100, B01111110, B01100110, B01111110, B01111100, B01100110, B01111110, B01111100}, // B
			{B00111100, B01111110, B01100010, B01100000, B01100000, B01100010, B01111110, B00111100}, // C
			{B01111000, B01111100, B01100110, B01100110, B01100110, B01100110, B01111100, B01111000}, // D
			{B01111110, B01111110, B01100000, B01111100, B01111100, B01100000, B01111110, B01111110}, // E
			{B01111110, B01111110, B01100000, B01111100, B01111100, B01100000, B01100000, B01100000}, // F
			{B00111100, B01111110, B01100000, B01101110, B01101110, B01100010, B01111110, B00111100}, // G
			{B01100110, B01100110, B01100110, B01111110, B01111110, B01100110, B01100110, B01100110}, // H
			{B01111110, B01111110, B00011000, B00011000, B00011000, B00011000, B01111110, B01111110}, // I
			{B01111110, B01111110, B00001100, B00001100, B01101100, B01101100, B01111100, B00111000}, // J
			{B01100110, B01101100, B01111000, B01110000, B01110000, B01111000, B01101100, B01100110}, // K
			{B00110000, B00110000, B00110000, B00110000, B00110000, B00110000, B00111110, B00111110}, // L
			{B01000010, B01100110, B01111110, B01011010, B01000010, B01000010, B01000010, B01000010}, // M
			{B00000000, B01000010, B01100010, B01110010, B01011010, B01001110, B01000110, B01000010}, // N
			{B00011000, B00111100, B01100110, B01100110, B01100110, B01100110, B00111100, B00011000}, // O
			{B01111100, B01111110, B01100110, B01100110, B01111100, B01111000, B01100000, B01100000}, // P
			{B00111000, B01000100, B01000100, B01000100, B01000100, B01001100, B01000100, B00111010}, // Q
			{B01111100, B01111110, B01100110, B01100110, B01111100, B01111000, B01101100, B01100110}, // R
			{B00111100, B01111110, B01100000, B01111100, B00111110, B00000110, B01111110, B00111100}, // S
			{B01111110, B01111110, B00011000, B00011000, B00011000, B00011000, B00011000, B00011000}, // T
			{B01100110, B01100110, B01100110, B01100110, B01100110, B01100110, B01111110, B00111100}, // U
			{B01100110, B01100110, B01100110, B01100110, B01100110, B01100110, B00111100, B00011000}, // V
			{B01000100, B01000100, B01000100, B01000100, B01010100, B01010100, B01101100, B01000100}, // W
			{B00000000, B01000010, B01100110, B00111100, B00011000, B00111100, B01100110, B01000010}, // X
			{B01100110, B01100110, B01100110, B00111100, B00011000, B00011000, B00011000, B00011000}, // Y
			{B00000000, B01111110, B01111110, B00001100, B00011000, B00110000, B01111110, B01111110}, // Z
			{B00011100, B00010000, B00010000, B00010000, B00010000, B00010000, B00010000, B00011100}, // [
			{B00000000, B01000000, B00100000, B00010000, B00001000, B00000100, B00000010, B00000000}, // "\"
			{B00111000, B00001000, B00001000, B00001000, B00001000, B00001000, B00001000, B00111000}, // ]
			{B00001000, B00010100, B00100010, B00000000, B00000000, B00000000, B00000000, B00000000}, // ^
			{B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111100}, // _
			{B00010000, B00001000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000}, // `
			{B00000000, B00000000, B00111000, B01000100, B00111100, B01000100, B01000100, B00111110}, // a
			{B00000000, B00100000, B00100000, B00100000, B00111000, B00100100, B00100100, B00111000}, // b
			{B00000000, B00000000, B00011100, B00100010, B00100000, B00100000, B00100010, B00011100}, // c
			{B00000000, B00000100, B00000100, B00000100, B00011100, B00100100, B00100100, B00011100}, // d
			{B00000000, B00000000, B00000000, B00011000, B00100100, B00111100, B00100000, B00011100}, // e
			{B00000000, B00001000, B00010100, B00010000, B00111100, B00010000, B00010000, B00010000}, // f
			{B00000000, B00011000, B00100100, B00100100, B00011100, B00000100, B00100100, B00011000}, // g
			{B00000000, B00100000, B00100000, B00100000, B00111000, B00100100, B00100100, B00100100}, // h
			{B00000000, B00001000, B00000000, B00001000, B00001000, B00001000, B00001000, B00001000}, // i
			{B00000000, B00001000, B00000000, B00001000, B00001000, B00001000, B00101000, B00010000}, // j
			{B00000000, B00100000, B00100000, B00101000, B00110000, B00110000, B00101000, B00100100}, // k
			{B00000000, B00001000, B00001000, B00001000, B00001000, B00001000, B00001000, B00001000}, // l
			{B00000000, B00000000, B00000000, B01010100, B01101010, B01001010, B01001010, B01001010}, // m
			{B00000000, B00000000, B00000000, B00101000, B00110100, B00100100, B00100100, B00100100}, // n
			{B00000000, B00000000, B00000000, B00011000, B00100100, B00100100, B00100100, B00011000}, // o
			{B00000000, B00000000, B00111000, B00100100, B00100100, B00111000, B00100000, B00100000}, // p
			{B00000000, B00000000, B00011100, B00100100, B00100100, B00011100, B00000100, B00000100}, // q
			{B00000000, B00000000, B00000000, B00101100, B00110000, B00100000, B00100000, B00100000}, // r
			{B00000000, B00011000, B00100100, B00100000, B00011000, B00000100, B00100100, B00011000}, // s
			{B00000000, B00000000, B00010000, B00111100, B00010000, B00010000, B00010100, B00011000}, // t
			{B00000000, B00000000, B00000000, B00000000, B00100100, B00100100, B00100100, B00011010}, // u
			{B00000000, B00000000, B00000000, B00000000, B01000100, B01000100, B00101000, B00010000}, // v
			{B00000000, B00000000, B00000000, B00000000, B01000100, B01010100, B01010100, B00101000}, // w
			{B00000000, B00000000, B00000000, B00000000, B00100100, B00011000, B00011000, B00100100}, // x
			{B00000000, B00000000, B00000000, B00100010, B00010100, B00001000, B00010000, B00100000}, // y
			{B00000000, B00000000, B00000000, B00000000, B00111100, B00001000, B00010000, B00111100}, // z
			{B00000000, B00001100, B00010000, B00010000, B00100000, B00010000, B00010000, B00001100}, // {
			{B00000000, B00010000, B00010000, B00010000, B00010000, B00010000, B00010000, B00010000}, // |
			{B00000000, B00110000, B00001000, B00001000, B00000100, B00001000, B00001000, B00110000}, // }
			{B00000000, B00000000, B00000000, B00110000, B01001001, B00000110, B00000000, B00000000}	// ~
	};

	int new_letter = 0; //位移量

	byte first_letter[8] = {0, 0, 0, 0, 0, 0, 0, 0};	//放置第一個字母的矩陣
	byte second_letter[8] = {0, 0, 0, 0, 0, 0, 0, 0}; //放置第二個字母的矩陣

	byte p[2] = {0, 0}; // 儲存 {第一個字元,第二個字元}

	byte we = 0; //目前變換次數 (第二個字母變成第一個字母的次數)

	unsigned long time1 = millis();

	String s = u8"HELLO WORLD"; //目前字串
	byte l_col = 2;							//前一個顏色

	volatile uint8_t redData[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
	volatile uint8_t greenData[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
};

#endif
